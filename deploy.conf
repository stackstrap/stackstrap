#
# StackStrap deploy.conf
#
---

production:
  # which git ref should be used, we use the origin's master to ensure we only
  # deploy changes that exist at the origin as well
  # see: git show-ref
  git_ref: refs/remotes/origin/master

  # where our current release should be symlinked to
  current_symlink: '~/current'

  # define our hosts
  hosts:
    stackstrap@stackstrap-master.fatbox.ca:
      roles: ['app']

  # define variables to be used in commands
  # this uses the list/array syntax to ensure that the variables
  # are evaluated in the order they are defined, allowing you to
  # use variables in other variables
  variables:
    - home: '/home/stackstrap'
    - virtualenv: '%(home)s/.virtualenvs/prod'
    - activate: 'source %(virtualenv)s/bin/activate'
    - test_virtualenv: '%(home)s/.virtualenvs/test'
    - test_activate: 'source %(test_virtualenv)s/bin/activate'
    - releasepath: '%(home)s/releases/%(release)s'
    - pythonpath: '%(releasepath)s/application/stackstrap'
    - settings: 'stackstrap.settings.prod'

  # define our stages
  # they are grouped into two categories: before & after
  # before stages are run prior to the new release being made the current one
  # after stages are run following
  #
  # the steps inside each stage are defined as a list/array and are evaluated
  # in the order they are defined
  stages:
    before:
      # run tests
      #- id: tests_setup
         #commands:
           #- rm -fr %(test_virtualenv)s
           #- virtualenv %(test_virtualenv)s
      #- id: tests
        #cd: '%(pythonpath)s'
        #prefix: '%(test_activate)s'
        #shell_env:
          #PYTHONPATH: '%(pythonpath)s'
          #DJANGO_SETTINGS_MODULE: '%(settings)s'
        #commands:
          #- 'pip install -r %(releasepath)s/application/requirements/base.txt'
          #- django-admin.py test projects
      
      # create a virtualenv if needed
      - id: virtualenv
        roles: ['app']
        commands:
          - '[ ! -d %(virtualenv)s ] && virtualenv --system-site-packages %(virtualenv)s || echo "virtualenv exists"'

      # install dependencies
      - id: install
        roles: ['app']
        prefix: '%(activate)s'
        commands:
          - 'pip install -r %(releasepath)s/application/requirements/base.txt'

      # database migration & static assets
      - id: django
        roles: ['app']
        cd: '%(pythonpath)s'
        prefix: '%(activate)s'
        shell_env:
          PYTHONPATH: '%(pythonpath)s'
          DJANGO_SETTINGS_MODULE: '%(settings)s'
        commands:
          - django-admin.py syncdb 
          - django-admin.py migrate
          - django-admin.py collectstatic --noinput

    after:
      - id: restart_uwsgi
        roles: ['app']
        commands:
          - supervisorctl -c /home/stackstrap/supervisor/conf/stackstrap.conf restart uwsgi

# vim: set ft=yaml ts=2 sw=2 et sts=2 :
